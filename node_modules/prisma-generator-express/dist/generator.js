"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const generator_helper_1 = require("@prisma/generator-helper");
const sdk_1 = require("@prisma/sdk");
const constants_1 = require("./constants");
const writeFileSafely_1 = require("./utils/writeFileSafely");
const generateFindUnique_1 = require("./helpers/generateFindUnique");
const generateImportPrismaStatement_1 = require("./helpers/generateImportPrismaStatement");
const generateFindMany_1 = require("./helpers/generateFindMany");
const generateFindFirst_1 = require("./helpers/generateFindFirst");
const generateCreate_1 = require("./helpers/generateCreate");
const generateRouteFile_1 = require("./helpers/generateRouteFile");
const generateCreateMany_1 = require("./helpers/generateCreateMany");
const generateUpdate_1 = require("./helpers/generateUpdate");
const generateUpdateMany_1 = require("./helpers/generateUpdateMany");
const generateUpsert_1 = require("./helpers/generateUpsert");
const generateDelete_1 = require("./helpers/generateDelete");
const generateDeleteMany_1 = require("./helpers/generateDeleteMany");
const generateAggregate_1 = require("./helpers/generateAggregate");
const generateCount_1 = require("./helpers/generateCount");
const generateGroupBy_1 = require("./helpers/generateGroupBy");
const { version } = require('../package.json');
(0, generator_helper_1.generatorHandler)({
    onManifest() {
        sdk_1.logger.info(`${constants_1.GENERATOR_NAME}:Registered`);
        return {
            version,
            defaultOutput: '../generated',
            prettyName: constants_1.GENERATOR_NAME,
        };
    },
    onGenerate: async (options) => {
        const prismaImportStatement = (0, generateImportPrismaStatement_1.generateImportPrismaStatement)(options);
        for await (const model of options.dmmf.datamodel.models) {
            await (0, writeFileSafely_1.writeFileSafely)({
                content: (0, generateFindUnique_1.generateFindUniqueFunction)({
                    model,
                    prismaImportStatement,
                }),
                options,
                model,
                operation: 'FindUnique',
            });
            await (0, writeFileSafely_1.writeFileSafely)({
                content: (0, generateFindFirst_1.generateFindFirstFunction)({
                    model,
                    prismaImportStatement,
                }),
                options,
                model,
                operation: 'FindFirst',
            });
            await (0, writeFileSafely_1.writeFileSafely)({
                content: (0, generateFindMany_1.generateFindManyFunction)({
                    model,
                    prismaImportStatement,
                }),
                options,
                model,
                operation: 'FindMany',
            });
            await (0, writeFileSafely_1.writeFileSafely)({
                content: (0, generateCreate_1.generateCreateFunction)({
                    model,
                    prismaImportStatement,
                }),
                options,
                model,
                operation: 'Create',
            });
            await (0, writeFileSafely_1.writeFileSafely)({
                content: (0, generateCreateMany_1.generateCreateManyFunction)({
                    model,
                    prismaImportStatement,
                }),
                options,
                model,
                operation: 'CreateMany',
            });
            await (0, writeFileSafely_1.writeFileSafely)({
                content: (0, generateUpdate_1.generateUpdateFunction)({
                    model,
                    prismaImportStatement,
                }),
                options,
                model,
                operation: 'Update',
            });
            await (0, writeFileSafely_1.writeFileSafely)({
                content: (0, generateUpdateMany_1.generateUpdateManyFunction)({
                    model,
                    prismaImportStatement,
                }),
                options,
                model,
                operation: 'UpdateMany',
            });
            await (0, writeFileSafely_1.writeFileSafely)({
                content: (0, generateUpsert_1.generateUpsertFunction)({
                    model,
                    prismaImportStatement,
                }),
                options,
                model,
                operation: 'Upsert',
            });
            await (0, writeFileSafely_1.writeFileSafely)({
                content: (0, generateDelete_1.generateDeleteFunction)({
                    model,
                    prismaImportStatement,
                }),
                options,
                model,
                operation: 'Delete',
            });
            await (0, writeFileSafely_1.writeFileSafely)({
                content: (0, generateDeleteMany_1.generateDeleteManyFunction)({
                    model,
                    prismaImportStatement,
                }),
                options,
                model,
                operation: 'DeleteMany',
            });
            await (0, writeFileSafely_1.writeFileSafely)({
                content: (0, generateAggregate_1.generateAggregateFunction)({
                    model,
                    prismaImportStatement,
                }),
                options,
                model,
                operation: 'Aggregate',
            });
            await (0, writeFileSafely_1.writeFileSafely)({
                content: (0, generateCount_1.generateCountFunction)({
                    model,
                    prismaImportStatement,
                }),
                options,
                model,
                operation: 'Count',
            });
            await (0, writeFileSafely_1.writeFileSafely)({
                content: (0, generateGroupBy_1.generateGroupByFunction)({
                    model,
                    prismaImportStatement,
                }),
                options,
                model,
                operation: 'GroupBy',
            });
            await (0, writeFileSafely_1.writeFileSafely)({
                content: (0, generateRouteFile_1.generateRouterFunction)({ model }),
                options,
                model,
                operation: 'index',
            });
        }
    },
});
//# sourceMappingURL=generator.js.map