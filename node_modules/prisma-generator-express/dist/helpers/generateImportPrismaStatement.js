"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateImportPrismaStatement = void 0;
const path_1 = __importDefault(require("path"));
function getImportGeneratorOptions(options) {
    var _a, _b;
    const clientGenerator = options.otherGenerators.find((gen) => gen.name === 'client');
    if (!clientGenerator || !((_a = clientGenerator.output) === null || _a === void 0 ? void 0 : _a.value)) {
        throw new Error('Prisma client generator not found.');
    }
    const modelDirPath = path_1.default.join((_b = options.generator.output) === null || _b === void 0 ? void 0 : _b.value, 'modelFolder');
    const clientOutputPath = clientGenerator.output.value;
    const relativeImportPath = path_1.default.relative(modelDirPath, clientOutputPath);
    return {
        outputPath: relativeImportPath.split(path_1.default.sep).join(path_1.default.posix.sep),
    };
}
function generateImportPrismaStatement(generatorOptions) {
    const options = getImportGeneratorOptions(generatorOptions);
    return `import type { Prisma } from '${options.outputPath}';\nimport type { PrismaClient } from '${options.outputPath}';\n`;
}
exports.generateImportPrismaStatement = generateImportPrismaStatement;
//# sourceMappingURL=generateImportPrismaStatement.js.map